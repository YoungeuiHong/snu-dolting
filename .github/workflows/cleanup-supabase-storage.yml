name: Supabase Storage Cleanup

on:
  schedule:
    - cron: '*/5 * * * *'  # 매 5분마다 실행

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm install @supabase/supabase-js

      - name: Execute Cleanup Script
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        run: |
          node <<EOF
          const { createClient } = require('@supabase/supabase-js');

          // Supabase 클라이언트 설정
          const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_KEY);

          // 현재 시간에서 1분 전의 타임스탬프 계산
          const now = new Date();
          const oneMinuteAgo = new Date(now.getTime() - 1 * 60 * 1000);

          async function deleteOldFiles() {
            const { data, error } = await supabase
              .storage
              .from('images')  // 버킷 이름
              .list('private');  // 디렉토리 이름

            if (error) {
              console.error('Error listing files:', error);
              return;
            }

            for (const file of data) {
              // 파일의 업로드 시각을 비교 (1분 이상된 경우만 삭제)
              const uploadDate = new Date(file.created_at);
              if (uploadDate < oneMinuteAgo) {
                const { error: deleteError } = await supabase
                  .storage
                  .from('images')
                  .remove([`private/${file.name}`]);

                if (deleteError) {
                  console.error(`Failed to delete ${file.name}:`, deleteError);
                } else {
                  console.log(`Deleted: ${file.name}`);
                }
              }
            }
          }

          deleteOldFiles()
            .then(() => console.log('File cleanup completed.'))
            .catch(console.error);
          EOF
